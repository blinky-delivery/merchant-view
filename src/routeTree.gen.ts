/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as AuthImport } from './routes/_auth'
import { Route as DashboardStoreImport } from './routes/dashboard/store'
import { Route as DashboardApplyImport } from './routes/dashboard/apply'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as DashboardStoreMenuOverviewImport } from './routes/dashboard/store/menu/overview'
import { Route as DashboardStoreMenuCreateImport } from './routes/dashboard/store/menu/create'
import { Route as DashboardStoreMenuMenuIdImport } from './routes/dashboard/store/menu/$menuId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardStoreRoute = DashboardStoreImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardApplyRoute = DashboardApplyImport.update({
  id: '/apply',
  path: '/apply',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardStoreMenuOverviewRoute = DashboardStoreMenuOverviewImport.update(
  {
    id: '/menu/overview',
    path: '/menu/overview',
    getParentRoute: () => DashboardStoreRoute,
  } as any,
)

const DashboardStoreMenuCreateRoute = DashboardStoreMenuCreateImport.update({
  id: '/menu/create',
  path: '/menu/create',
  getParentRoute: () => DashboardStoreRoute,
} as any)

const DashboardStoreMenuMenuIdRoute = DashboardStoreMenuMenuIdImport.update({
  id: '/menu/$menuId',
  path: '/menu/$menuId',
  getParentRoute: () => DashboardStoreRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthImport
    }
    '/dashboard/apply': {
      id: '/dashboard/apply'
      path: '/apply'
      fullPath: '/dashboard/apply'
      preLoaderRoute: typeof DashboardApplyImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/store': {
      id: '/dashboard/store'
      path: '/store'
      fullPath: '/dashboard/store'
      preLoaderRoute: typeof DashboardStoreImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/store/menu/$menuId': {
      id: '/dashboard/store/menu/$menuId'
      path: '/menu/$menuId'
      fullPath: '/dashboard/store/menu/$menuId'
      preLoaderRoute: typeof DashboardStoreMenuMenuIdImport
      parentRoute: typeof DashboardStoreImport
    }
    '/dashboard/store/menu/create': {
      id: '/dashboard/store/menu/create'
      path: '/menu/create'
      fullPath: '/dashboard/store/menu/create'
      preLoaderRoute: typeof DashboardStoreMenuCreateImport
      parentRoute: typeof DashboardStoreImport
    }
    '/dashboard/store/menu/overview': {
      id: '/dashboard/store/menu/overview'
      path: '/menu/overview'
      fullPath: '/dashboard/store/menu/overview'
      preLoaderRoute: typeof DashboardStoreMenuOverviewImport
      parentRoute: typeof DashboardStoreImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardStoreRouteChildren {
  DashboardStoreMenuMenuIdRoute: typeof DashboardStoreMenuMenuIdRoute
  DashboardStoreMenuCreateRoute: typeof DashboardStoreMenuCreateRoute
  DashboardStoreMenuOverviewRoute: typeof DashboardStoreMenuOverviewRoute
}

const DashboardStoreRouteChildren: DashboardStoreRouteChildren = {
  DashboardStoreMenuMenuIdRoute: DashboardStoreMenuMenuIdRoute,
  DashboardStoreMenuCreateRoute: DashboardStoreMenuCreateRoute,
  DashboardStoreMenuOverviewRoute: DashboardStoreMenuOverviewRoute,
}

const DashboardStoreRouteWithChildren = DashboardStoreRoute._addFileChildren(
  DashboardStoreRouteChildren,
)

interface DashboardRouteChildren {
  DashboardApplyRoute: typeof DashboardApplyRoute
  DashboardStoreRoute: typeof DashboardStoreRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardApplyRoute: DashboardApplyRoute,
  DashboardStoreRoute: DashboardStoreRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard/apply': typeof DashboardApplyRoute
  '/dashboard/store': typeof DashboardStoreRouteWithChildren
  '/dashboard/store/menu/$menuId': typeof DashboardStoreMenuMenuIdRoute
  '/dashboard/store/menu/create': typeof DashboardStoreMenuCreateRoute
  '/dashboard/store/menu/overview': typeof DashboardStoreMenuOverviewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard/apply': typeof DashboardApplyRoute
  '/dashboard/store': typeof DashboardStoreRouteWithChildren
  '/dashboard/store/menu/$menuId': typeof DashboardStoreMenuMenuIdRoute
  '/dashboard/store/menu/create': typeof DashboardStoreMenuCreateRoute
  '/dashboard/store/menu/overview': typeof DashboardStoreMenuOverviewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/dashboard/apply': typeof DashboardApplyRoute
  '/dashboard/store': typeof DashboardStoreRouteWithChildren
  '/dashboard/store/menu/$menuId': typeof DashboardStoreMenuMenuIdRoute
  '/dashboard/store/menu/create': typeof DashboardStoreMenuCreateRoute
  '/dashboard/store/menu/overview': typeof DashboardStoreMenuOverviewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/dashboard/apply'
    | '/dashboard/store'
    | '/dashboard/store/menu/$menuId'
    | '/dashboard/store/menu/create'
    | '/dashboard/store/menu/overview'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/dashboard/apply'
    | '/dashboard/store'
    | '/dashboard/store/menu/$menuId'
    | '/dashboard/store/menu/create'
    | '/dashboard/store/menu/overview'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/dashboard'
    | '/_auth/login'
    | '/_auth/signup'
    | '/dashboard/apply'
    | '/dashboard/store'
    | '/dashboard/store/menu/$menuId'
    | '/dashboard/store/menu/create'
    | '/dashboard/store/menu/overview'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/signup"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/apply",
        "/dashboard/store"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/dashboard/apply": {
      "filePath": "dashboard/apply.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/store": {
      "filePath": "dashboard/store.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/store/menu/$menuId",
        "/dashboard/store/menu/create",
        "/dashboard/store/menu/overview"
      ]
    },
    "/dashboard/store/menu/$menuId": {
      "filePath": "dashboard/store/menu/$menuId.tsx",
      "parent": "/dashboard/store"
    },
    "/dashboard/store/menu/create": {
      "filePath": "dashboard/store/menu/create.tsx",
      "parent": "/dashboard/store"
    },
    "/dashboard/store/menu/overview": {
      "filePath": "dashboard/store/menu/overview.tsx",
      "parent": "/dashboard/store"
    }
  }
}
ROUTE_MANIFEST_END */
